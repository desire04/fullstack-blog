{"ast":null,"code":"var _jsxFileName = \"/Users/zahyoo/FullstackBlog/my-blog/src/components/AddCommentForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport useUser from '../hooks/useUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCommentForm = ({\n  articleName,\n  onArticleUpdated\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [commentText, setCommentText] = useState('');\n  const {\n    user\n  } = useUser();\n  const addComment = async () => {\n    const token = user && (await user.getIdToken());\n    const headers = token ? {\n      authtoken: token\n    } : {};\n    const response = await axios.post(`/api/articles/${articleName}/comments`, {\n      postedBy: name,\n      text: commentText\n    }, {\n      headers\n    });\n    const updatedArticle = response.data;\n    onArticleUpdated(updatedArticle);\n    setName('');\n    setCommentText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"add-comment-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), user && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You are posting as \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: commentText,\n      onChange: e => setCommentText(e.target.value),\n      rows: \"4\",\n      cols: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addComment,\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(AddCommentForm, \"6G8oNyEY0yeHJTWv50FGrxMnmP4=\", false, function () {\n  return [useUser];\n});\n_c = AddCommentForm;\nexport default AddCommentForm;\nvar _c;\n$RefreshReg$(_c, \"AddCommentForm\");","map":{"version":3,"names":["useState","axios","useUser","jsxDEV","_jsxDEV","AddCommentForm","articleName","onArticleUpdated","_s","name","setName","commentText","setCommentText","user","addComment","token","getIdToken","headers","authtoken","response","post","postedBy","text","updatedArticle","data","id","children","fileName","_jsxFileName","lineNumber","columnNumber","email","value","onChange","e","target","rows","cols","onClick","_c","$RefreshReg$"],"sources":["/Users/zahyoo/FullstackBlog/my-blog/src/components/AddCommentForm.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport useUser from '../hooks/useUser';\n\nconst AddCommentForm = ({ articleName, onArticleUpdated }) => {\n    const [name, setName] = useState('');\n    const [commentText, setCommentText] = useState('');\n    const { user }  = useUser();\n\n    const addComment = async ()  => {\n        const token = user && await user.getIdToken();\n        const headers = token ? { authtoken : token } : {};\n        const response = await axios.post(`/api/articles/${articleName}/comments`, {\n            postedBy: name, \n            text: commentText,\n        }, {\n            headers,\n        });\n        const updatedArticle = response.data;\n        onArticleUpdated(updatedArticle);\n        setName('');\n        setCommentText('');\n    }\n    return (\n        <div id=\"add-comment-form\">\n            <h3>Add a Comment</h3>\n            {user && <p>You are posting as {user.email}</p>}\n            <textarea \n                value={commentText}\n                onChange={e => setCommentText(e.target.value)}\n                rows=\"4\" \n                cols=\"50\" />\n            <button onClick={addComment}>Add Comment</button>\n        </div>\n    )\n}\n\nexport default AddCommentForm;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM;IAAEa;EAAK,CAAC,GAAIX,OAAO,CAAC,CAAC;EAE3B,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAa;IAC5B,MAAMC,KAAK,GAAGF,IAAI,KAAI,MAAMA,IAAI,CAACG,UAAU,CAAC,CAAC;IAC7C,MAAMC,OAAO,GAAGF,KAAK,GAAG;MAAEG,SAAS,EAAGH;IAAM,CAAC,GAAG,CAAC,CAAC;IAClD,MAAMI,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,iBAAiBd,WAAW,WAAW,EAAE;MACvEe,QAAQ,EAAEZ,IAAI;MACda,IAAI,EAAEX;IACV,CAAC,EAAE;MACCM;IACJ,CAAC,CAAC;IACF,MAAMM,cAAc,GAAGJ,QAAQ,CAACK,IAAI;IACpCjB,gBAAgB,CAACgB,cAAc,CAAC;IAChCb,OAAO,CAAC,EAAE,CAAC;IACXE,cAAc,CAAC,EAAE,CAAC;EACtB,CAAC;EACD,oBACIR,OAAA;IAAKqB,EAAE,EAAC,kBAAkB;IAAAC,QAAA,gBACtBtB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBjB,IAAI,iBAAIT,OAAA;MAAAsB,QAAA,GAAG,qBAAmB,EAACb,IAAI,CAACkB,KAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/C1B,OAAA;MACI4B,KAAK,EAAErB,WAAY;MACnBsB,QAAQ,EAAEC,CAAC,IAAItB,cAAc,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC9CI,IAAI,EAAC,GAAG;MACRC,IAAI,EAAC;IAAI;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChB1B,OAAA;MAAQkC,OAAO,EAAExB,UAAW;MAAAY,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd,CAAC;AAAAtB,EAAA,CA/BKH,cAAc;EAAA,QAGEH,OAAO;AAAA;AAAAqC,EAAA,GAHvBlC,cAAc;AAiCpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}